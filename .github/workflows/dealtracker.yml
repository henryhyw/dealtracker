name: DealTracker

on:
  schedule:
    - cron: "*/30 6-22 * * *"  # Every 30 minutes from 6 AM to 10 PM (UTC by default)
  workflow_dispatch:       # Manual trigger

jobs:
  tracker:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Grant write access to repository contents

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install matching ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Chrome version: $CHROME_VERSION"
          DRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r --arg ver "$CHROME_VERSION" '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          echo "Downloading Chromedriver from $DRIVER_URL"
          wget -O chromedriver.zip "$DRIVER_URL"
          unzip chromedriver.zip
          if [ -d "chromedriver-linux64" ]; then
              sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          else
              sudo mv chromedriver /usr/local/bin/chromedriver
          fi
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Create .env file for email credentials
        run: |
          echo "EMAIL_SENDER=${{ secrets.EMAIL_SENDER }}" > .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
          echo "EMAIL_RECEIVER=${{ secrets.EMAIL_RECEIVER }}" >> .env

      - name: Run DealTracker
        run: python tracker.py

      - name: Commit and push updated data.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add data.json
          git commit -m "Update data.json [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}